{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DashboardService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3001';\n  }\n  getData() {\n    return this.http.get(`${this.apiUrl}/donator`);\n  }\n  getDataImc() {\n    return this.http.get(`${this.apiUrl}/donator/imc-average`);\n  }\n  getObesityPercent() {\n    return this.http.get(`${this.apiUrl}/donator/obesity-percentage`);\n  }\n  getAverageAgeByBloodtype() {\n    return this.http.get(`${this.apiUrl}/donator/average-age-by-blood-type`);\n  }\n  getPossibleDonors() {\n    return this.http.get(`${this.apiUrl}/donator/possible-donors`);\n  }\n  static #_ = this.ɵfac = function DashboardService_Factory(t) {\n    return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DashboardService,\n    factory: DashboardService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DashboardService","constructor","http","apiUrl","getData","get","getDataImc","getObesityPercent","getAverageAgeByBloodtype","getPossibleDonors","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/pedro/Workspace/VSCode/vital-web-front/src/app/modules/dashboard/dashboard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport type { AverageAgeByBloodType, Donator, ImcAverage, ObesityPercent, PossibleDonors } from 'src/app/core/@types/donator';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n  private apiUrl = 'http://localhost:3001';\n\n  constructor(private readonly http: HttpClient) { }\n\n  getData() {\n    return this.http.get<Donator[]>(`${this.apiUrl}/donator`);\n  }\n\n  getDataImc() {\n    return this.http.get<ImcAverage[]>(`${this.apiUrl}/donator/imc-average`);\n  }\n  \n  getObesityPercent() {\n    return this.http.get<ObesityPercent[]>(`${this.apiUrl}/donator/obesity-percentage`);\n  }\n  \n  getAverageAgeByBloodtype() {\n    return this.http.get<AverageAgeByBloodType[]>(`${this.apiUrl}/donator/average-age-by-blood-type`);\n  }\n\n  getPossibleDonors() {\n    return this.http.get<PossibleDonors[]>(`${this.apiUrl}/donator/possible-donors`);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAG3BC,YAA6BC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFzB,KAAAC,MAAM,GAAG,uBAAuB;EAES;EAEjDC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,UAAU,CAAC;EAC3D;EAEAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAe,GAAG,IAAI,CAACF,MAAM,sBAAsB,CAAC;EAC1E;EAEAI,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAmB,GAAG,IAAI,CAACF,MAAM,6BAA6B,CAAC;EACrF;EAEAK,wBAAwBA,CAAA;IACtB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAA0B,GAAG,IAAI,CAACF,MAAM,oCAAoC,CAAC;EACnG;EAEAM,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAmB,GAAG,IAAI,CAACF,MAAM,0BAA0B,CAAC;EAClF;EAAC,QAAAO,CAAA,G;qBAvBUV,gBAAgB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBf,gBAAgB;IAAAgB,OAAA,EAAhBhB,gBAAgB,CAAAiB,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}